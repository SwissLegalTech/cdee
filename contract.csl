type Currency
 | CHF
 | EUR
 | USD
 | BTC

type PaymentMethod
 | CreditCard
 | Invoice
 | PayPal

type OfferContract : Event {
 contractID : String,
 invoiceAmount : Float,
 currency : Currency,
 discount : Float,
 placeOfJuristiction : String,
 choiceOfLaw : String,
 startContract : DateTime,
 endContract : DateTime,
 deliveryObject : String
}

type RejectContract : Event {
 contractID : String
}

type AcceptContract : Event {
 contractID : String
}

type ProvideDelivery : Event {
 contractID : String
}

type MakePayment : Event {
 invoiceAmount : Float,
 paymentMethod : PaymentMethod, cg6sg
 contractID : String
}


template DisputeResolutionContract (seller, buyer) =
<seller> o : OfferContract

then

(
<buyer> a : AcceptContract where
 a.timestamp <= DateTime::addDays o.timestamp 7 &&
 a.contractID = o.contractID

or

 <buyer> r : RejectContract where
 r.contractID = o.contractID

 then

 failure
)

then

<seller> p : ProvideDelivery where
 p.contractID = o.contractID

then

<buyer> m : MakePayment where
 m.contractID = o.contractID &&
 m.invoiceAmount = o.invoiceAmount